{import: io_contabil.PadroesERP};
{import: io_contabil.PadroesCartoes};
{import: io_contabil.Database};
{import: io_contabil.Regras};
{import: io_contabil.Duplicatas};
{import: io_contabil.Util};
//TEMPLATE 16.05.2017
public JSONArray run(InoutLogger logger) throws Exception {

    JSONArray  records  = new JSONArray();
    JSONObject ultimoJS = new JSONObject();

    // Carrega as propriedades
    SysProperties props = SysProperties.getInstance();
    JSONObject roteiroCRMPrincipal = getRoteiro();
    JSONObject roteiroCRM = getRoteiro();
    JSONObject jStatus = new JSONObject();

    JSONObject objetoRoteiro = new JSONObject();
    objetoRoteiro.put("contabilidade", roteiroCRM.optString("contabilidade"));
    props.load("contabil/" + roteiroCRM.optString("contabilidade") + "/contabil.properties");

    //Conectar na Base de Dados IO_CONTABIL.
    DataBase dbIOCont = null;

    String empresa = getNomeEmpresa();
    String codEmpresa = props.get(empresa + "_COD_EMPRESA");
    String ERPContabil = props.get("ERP_CONTABILIDADE");
    String nomeEmpresa = props.get(empresa + "_NOME_EMPRESA");
    String cnpjEmpresa = props.get(empresa + "_CNPJ_EMPRESA");
    String emailResponsavel = props.get(empresa + "_EMAIL_RESPONSAVEL");
    String emailCanal = props.get("EMAIL_CANAL");

    String tipoLancamento = getNomeRota();
    if (tipoLancamento.toUpperCase().contains("PAGAS"))    tipoLancamento = "PAGAR";
    if (tipoLancamento.toUpperCase().contains("RECEBIDA")) tipoLancamento = "RECEBER";


    String compDirName = nomeEmpresa + "_#" + codEmpresa;
    String dirName = "";
    if (tipoLancamento.contains("PAGAR"))   dirName = RouteEngine.INOUT_HOME + "/contabil/" + roteiroCRM.optString("contabilidade") + "/" + compDirName + "/APagar";
    if (tipoLancamento.contains("RECEBER")) dirName = RouteEngine.INOUT_HOME + "/contabil/" + roteiroCRM.optString("contabilidade") + "/" + compDirName + "/AReceber";


    String backupDirName = dirName + "/Processado";

    boolean apagaExtrato        = false;
    boolean geraRegraPortador   = false;
    boolean comparaRazao        = false;
    String tipoEmail            = "";

    HashMap mapaVariavel		= new HashMap();
    HashMap mapaLote			= new HashMap();
    HashMap mapaDePara			= new HashMap();
    HashMap mapaOficial			= new HashMap();

    String cruzaExtrato    	= "";
    String Cruza_Extrato_com_Extrato = "";
    String mesAnoAnterior		= "";
    String mesAno2Anterior		= "";
    String mesAnoAtual			= "";
    int mesRef					= 0;
    int anoRef					= 0;
    String contaJuros			= "";
    String contaDesconto		= "";
    String contaMulta			= "";
    String contaTransitoria		= "";
    String contaEmpresaBranco	= "";
    String movimentoPortador	= "";
    String contaFixaDebito		= "";
    String contaFixaCredito		= "";
    String contaPortador		= "";		//pg - cred | rec - deb
    String contaMovimento		= "";		//pg - deb | rec - cred
    String tabelaContabil       = "";
    String dataMovimento        = "";
    String classificaPlano      = "";
    String classificaFornec     = "";

    boolean geraFiscal = false;
    String loteFiscal  = "";

    String Conta_Fixa_Cruzamento_Extrato = "";
    String contaInvertida   = "";
    String contaBuscaPlano	= "";
    String nomeArquivo      = "";
    String chave			= "";
    String classificacao	= "";
    String dataLote			= DateUtil.dateToString(new Date(),"yyyy-MM");
    String lote				= "";
    boolean enviouEmail 	= false;
    boolean primeiraVezDuplicata = true;
    boolean primeiroArquivo 			= true;
    String regraContaMovimento 			= "";
    String regraHistorico 				= "";
	String separadorCsv	= "";
    String tipoPlanilha = "";

	String receita			= "";
	String cpfCnpj			= "";
	String cadIcms			= "";
	String competencia		= "";
	String dataVencimento	= "";
	String idGuia			= "";

	String chaveAnterior	= "";
	String chaveDocumento	= "";

	String separator = "\\|";

	String[] linhas = new String[0];

    try {

        String extencao = "";
        for(int extArquivo = 0; extArquivo < 15; extArquivo++){
            if(extArquivo == 0) extencao = ".pdf,.PDF";
            if(extArquivo == 1) extencao = ".pdf,.PDF";
            if(extArquivo == 2) extencao = ".pdf,.PDF";
            if(extArquivo == 3) extencao = ".csv,.CSV";
            if(extArquivo == 4) extencao = ".csv,.CSV";
            if(extArquivo == 5) extencao = ".csv,.CSV";
            if(extArquivo == 6) extencao = ".xlsx,.XLSX";
            if(extArquivo == 7) extencao = ".xlsx,.XLSX";
            if(extArquivo == 8) extencao = ".xlsx,.XLSX";
            if(extArquivo == 9) extencao = ".txt,.TXT";
            if(extArquivo == 10) extencao = ".txt,.TXT";
            if(extArquivo == 11) extencao = ".txt,.TXT";
			if(extArquivo == 12) extencao = ".pdf,.PDF";
            if(extArquivo == 13) extencao = ".pdf,.PDF";
            if(extArquivo == 14) extencao = ".pdf,.PDF";


            for (int porAba = 0; porAba < 60; porAba++) {

				// =============================  =============================   =============================
				// =============================  VARIAVEIS PARA LEITURA DE PDF   =============================
				// =============================  =============================   =============================
				String creceita			= "";
				String ccpfCnpj			= "";
				String ccadIcms			= "";
				String ccompetencia		= "";
				String cdataVencimento	= "";

				int ireceita		= -1;
				int icpfCnpj		= -1;
				int icadIcms		= -1;
				int icompetencia	= -1;
				int idataVencimento	= -1;

				int lreceita		= -1;
				int lcpfCnpj		= -1;
				int lcadIcms		= -1;
				int lcompetencia	= -1;
				int ldataVencimento	= -1;

				int sreceita		= 0;
				int scpfCnpj		= 0;
				int scadIcms		= 0;
				int scompetencia	= 0;
				int sdataVencimento	= 0;

                String apagaArquivo		= backupDirName;
                String abasEspecificas	= roteiroCRM.optString("Abas_Especificas");
				abasEspecificas 		= abasEspecificas.replace(",",";");
				if (abasEspecificas.equals("")) {
                    if (porAba > 0) break;
                }
                if (!abasEspecificas.equals("")) {
                    if (!abasEspecificas.contains(String.valueOf(porAba))) {
                        continue;
                    }

                    String ultimaAba = abasEspecificas;
                    if (ultimaAba.contains(";")) ultimaAba = ultimaAba.substring(ultimaAba.lastIndexOf(";")+1).trim();
                    if (!ultimaAba.equals(String.valueOf(porAba))) apagaArquivo = null;
                }

                FilesLoader fileLoader = new FilesLoader(dirName, extencao, apagaArquivo, true, logger);
                int[] abas = {porAba};
                fileLoader.setSheetsToRead(abas);
                fileLoader.loadFiles();

                for (MemoryFile memFile: fileLoader.getMemFiles()) {


                    // =======================  =================   =======================
                    // =======================  VARIAVEIS PADROES   =======================
                    // =======================  =================   =======================
                    String historico      = "";

                    String codCcOrigem    = "";
                    String nomeOrigem     = "";
                    String nomePortador   = "";
                    String nomePortador2  = "";
                    String documento      = "";
                    int    parcelaDoc     = 1;
                    double valorDocumento = 0.00;
                    double valorPagamento = 0.00;
                    double valorDesconto  = 0.00;
                    double valorJuros     = 0.00;
                    double valorMulta     = 0.00;

                    int icodCcOrigem    = -1;
                    int inomeOrigem     = -1;
                    int inomePortador   = -1;
                    int idocumento      = -1;
                    int idataMovimento  = -1;
                    int ivalorDocumento = -1;
                    int ivalorPagamento = -1;
                    int ivalorDesconto  = -1;
                    int ivalorJuros     = -1;
                    int ivalorMulta     = -1;
                    int icomplemento01  = -1;
                    int icomplemento02  = -1;
                    int icomplemento03	= -1;
                    int icomplemento04  = -1;
                    int icomplemento05	= -1;
                    int icomplemento06	= -1;
                    int icomplemento07	= -1;
                    int icomplemento08	= -1;
                    int icomplemento09	= -1;
                    int icomplemento10	= -1;
					int idataFake		= -1;

                    String contaGetConta	= "";
                    contaPortador	= "";		//pg - cred | rec - deb
                    contaMovimento	= "";		//pg - deb | rec - cred


                    String complemento01	= "";
                    String complemento02	= "";
                    String complemento03	= "";
                    String complemento04	= "";
                    String complemento05	= "";
                    String complemento06	= "";
                    String complemento07	= "";
                    String complemento08	= "";
                    String complemento09	= "";
                    String complemento10	= "";
                    String codCentroCusto	= "";
                    String codFilial        = "";

                    double valorTotalDoc	= 0.0;
                    double valorTotalJuros	= 0.0;
                    double valorTotalDesc	= 0.0;

                    String classJur			= "";
                    String classDes			= "";
                    String classMul			= "";

                    String codErroString	= "";
                    int cont				= 0;
                    String linhasProblema	= "";
                    String idEmpresa        = "";
                    String idRoteiro  	    = "";

                    String histAux			= "";
                    String anoData			= "";
					boolean zerar			= true;




                    if(extencao.contains(".xlsx,.XLSX")) memFile.setFieldSeparator("\\|");
                    if(extencao.contains(".pdf,.PDF"))   memFile.setFieldSeparator("\\|");
					if(extencao.contains(".csv,.CSV"))	 memFile.setFieldSeparator(separadorCsv);
                    nomeArquivo = memFile.getFilename();

                    if (dbIOCont == null) {
                        dbIOCont = connectIOContabil(props, logger);
                    }

					 if(primeiroArquivo) {
						limparIORoteiro(codEmpresa, tipoLancamento, dbIOCont, logger);
						primeiroArquivo = false;
					}

                    //########################################################################

                    contaJuros		    = roteiroCRM.optString("contaFixaJuros");
                    contaFixaCredito    = roteiroCRM.optString("contaFixaCredito");
                    contaFixaDebito     = roteiroCRM.optString("contaFixaDebito");
                    contaDesconto 	    = roteiroCRM.optString("contaFixaDesconto");
                    contaMulta		    = roteiroCRM.optString("contaFixaMulta");
                    idEmpresa      	    = roteiroCRM.optString("idEmpresa");
                    idRoteiro   	    = roteiroCRM.optString("idRoteiro");
                    movimentoPortador   = roteiroCRM.optString("movimentoPortador");
                    classificaPlano     = roteiroCRM.optString("classificaPlano");
                    classificaFornec    = roteiroCRM.optString("classificaFornec");
                    cruzaExtrato	    = roteiroCRM.optString("cruzaExtrato").toUpperCase();
                    Cruza_Extrato_com_Extrato = roteiroCRM.optString("Cruza_Extrato_com_Extrato").toUpperCase();

                    tipoPlanilha = "MOVIMENTO";
                    boolean enviaEmailExtrato = false;
                    boolean naoLeMais = false;

                    tipoEmail = "CLIENTE";
                    if (nomeArquivo.toUpperCase().contains("OTTIMIZZA"))  tipoEmail = "CANAL";
                    if (nomeArquivo.toUpperCase().contains("OTTIMIZZAF")) tipoEmail = "SUPORTE";

                    String debitoCredito   		 = "";
                    String chaveExtrato    		 = "";



                    //########################################################################


                    // =======================  ========================   =======================
                    // =======================  VARIAVEIS PERSONALIZADAS   =======================
                    // =======================  ========================   =======================

                    while(memFile.hasNextLine()) {
                            String line = memFile.nextLine();
							line = StringUtil.removeSpecialCharsToUC(line);
                            logger.logInfo("@@ " + line);
                        try {
							linhas = increaseArraySize(linhas);
							linhas[linhas.length - 1] = line;
                            //logger.logInfo("PDF " + line);

                        } catch (Exception e) {
                            logger.logError("EndpointA:", e);
                        }
                    }
                }


				for(int passagem = 1; passagem <= 3; passagem++) {

					for(int linha = 0; linha < linhas.length; linha++) {
						try {
							String line = linhas[linha];

							/////////////////////////////////////////
							/// INICIO DEFINICAO DE TIPO PLANILHA ///
							/////////////////////////////////////////

							switch(passagem) {
								case 1: {
                                    //logger.logInfo("*** 01");
									if(line.contains("GUIA NACIONAL DE RECOLHIMENTO DE TRIBUTOS ESTADUAIS")) {
										tipoPlanilha = "GUIA_DIFAL";
										idGuia = "35";

										creceita		= "CODIGO DA RECEITA";
										ccpfCnpj		= "";
										ccadIcms		= "CNPJ/CPF/INSC. EST.";
										ccompetencia	= "PERIODO DE REFERENCIA";
										cdataVencimento	= "DATA DE VENCIMENTO";

										ireceita		=  3;
										icpfCnpj		= -1;
										icadIcms		=  1;
										icompetencia	=  1;
										idataVencimento	=  2;

										sreceita		= 0;
										scpfCnpj		= 0;
										scadIcms		= 1;
										scompetencia	= 1;
										sdataVencimento	= 1;
										break;
									}

									if(line.contains("GUIA DE RECOLHIMENTO DO ESTADO DO PARANA")) {
										tipoPlanilha 	= "GUIA_DIFAL_CONSUMO";
										idGuia = "35";

										creceita		= "CODIGO DA RECEITA";
										ccpfCnpj		= "INSCRICAO CNPJ OU CPF";
										ccadIcms		= "INSCRICAO NO CAD/ICMS";
										ccompetencia	= "PERIODO DE REFERENCIA";
										cdataVencimento	= "DATA DE VENCIMENTO";

										ireceita		=  3;
										icpfCnpj		=  1;
										icadIcms		=  2;
										icompetencia	=  3;
										idataVencimento	=  1;

										sreceita		= 1;
										scpfCnpj		= 1;
										scadIcms		= 1;
										scompetencia	= 0;
										sdataVencimento	= 1;
										break;
									}

									if(line.contains("DOCUMENTO DE ARRECADACAO DO SIMPLES NACIONAL")) {
										tipoPlanilha 	= "DAS";
										idGuia = "33";

										creceita		= "";
										ccpfCnpj		= "NUMERO DO CPF/CNPJ";
										ccadIcms		= "";
										ccompetencia	= "COMPETENCIA";
										cdataVencimento	= "DATA DE VENCIMENTO";

										ireceita		= -1;
										icpfCnpj		=  3;
										icadIcms		= -1;
										icompetencia	=  1;
										idataVencimento	=  3;

										sreceita		=  0;
										scpfCnpj		=  0;
										scadIcms		=  0;
										scompetencia	=  1;
										sdataVencimento	=  0;
										break;
									}

									if(line.contains("DARF")){
                                        if(line.contains("PIS") || line.contains("COFINS")){
                                            tipoPlanilha 	= "PIS-COFINS";
                                        } else if(line.contains("IRPJ") || line.contains("CSLL")){
                                            tipoPlanilha 	= "IRPJ-CSLL";
                                        } else if(line.contains("CSRF")){
                                            tipoPlanilha    = "CSRF";
                                        } else if(line.contains("IRRF")){
                                            tipoPlanilha    = "IRFF";
                                        } else if(line.contains("IPI")){
                                            tipoPlanilha    = "IPI";
                                        } else {continue;}
										idGuia = "";

										creceita		= "CODIGO DA RECEITA";
										ccpfCnpj		= "NUMERO DO CPF OU CNPJ";
										ccadIcms		= "";
										ccompetencia	= "APURACAODA";
										cdataVencimento	= "";

										ireceita		=  3;
										icpfCnpj		=  1;
										icadIcms		= -1;
										icompetencia	=  4;
										idataVencimento	= -1;

										sreceita		=  0;
										scpfCnpj		=  1;
										scadIcms		=  0;
										scompetencia	=  0;
										sdataVencimento	=  0;
										break;
									}

                                    if(line.contains("GUIA DA PREVIDENCIA SOCIAL") && line.contains("GPS")) {
										tipoPlanilha 	= "GPS";
										idGuia = "";
										creceita		= "CODIGO DE PAGAMENTO";
										ccpfCnpj		= "IDENTIFICADOR";
										ccadIcms		= "";
										ccompetencia	= "COMPETENCIA";
										cdataVencimento	= "";

										ireceita		=  2;
										icpfCnpj		=  0;
										icadIcms		= -1;
										icompetencia	=  0;
										idataVencimento	= -1;

										sreceita		=  1;
										scpfCnpj		=  1;
										scadIcms		=  0;
										scompetencia	=  1;
										sdataVencimento	=  0;

                                        if(line.contains("MINISTERIO DA PREVIDENCIA SOCIAL") && !getContentAt(line, separator, 2).equals("")){
                                            tipoPlanilha 	= "GPS2";
                                            idGuia          = "";
                                            ireceita		=  1;
                                            break;
                                        }
									}

                                    if(line.contains("RECIBO DE ENTREGA DA DECLARACAO DE DEBITOS E CREDITOS TRIBUTARIOS FEDERAIS")) {
										tipoPlanilha = "DCTF";
										idGuia = "";

										creceita		= "RECIBO DE ENTREGA DA DECLARACAO DE DEBITOS E CREDITOS TRIBUTARIOS FEDERAIS";
										ccpfCnpj		= "D C T F";
										ccadIcms		= "";
										ccompetencia	= "D C T F";
										cdataVencimento	= "";

										ireceita		=  0;
										icpfCnpj		=  0;
										icadIcms		= -1;
										icompetencia	=  1;
										idataVencimento	= -1;

										sreceita		= 0;
										scpfCnpj		= 1;
										scadIcms		= 0;
										scompetencia	= 1;
										sdataVencimento	= 0;
										break;
									}

                                    if(line.contains("ATIVIDADES IMOBILIARIAS") && line.contains("DIMOB")) {
										tipoPlanilha = "DIMOB";
										idGuia = "";

										creceita		= "RECIBO DE ENTREGA DA DIMOB";
										ccpfCnpj		= "CNPJ DO DECLARANTE:";
										ccadIcms		= "";
										ccompetencia	= "ANO-CALENDARIO";
										cdataVencimento	= "";

										ireceita		=  0;
										icpfCnpj		=  1;
										icadIcms		= -1;
                                        icompetencia	=  1;
										idataVencimento	= -1;

										sreceita		= 0;
										scpfCnpj		= 0;
										scadIcms		= 0;
										scompetencia	= 0;
										sdataVencimento	= 0;
										break;
									}

                                    if(line.contains("DECLARACAO DO IMPOSTO SOBRE A RENDA RETIDO NA FONTE") && line.contains("DIRF")) {
										tipoPlanilha = "DIRF";
										idGuia = "";

										creceita		= "RECIBO DE ENTREGA";
										ccpfCnpj		= "CNPJ";
										ccadIcms		= "";
										ccompetencia	= "MINISTERIO DA FAZENDA";
										cdataVencimento	= "";

										ireceita		=  0;
										icpfCnpj		=  0;
										icadIcms		= -1;
                                        icompetencia	=  1;
										idataVencimento	= -1;

										sreceita		=-1;
										scpfCnpj		= 0;
										scadIcms		= 0;
										scompetencia	= 0;
										sdataVencimento	= 0;
										break;
									}

                                    if(line.contains("DECLARACAO DE SERVICOS MEDICOS E DE SAUDE") && line.contains("DMED")) {
										tipoPlanilha = "DMED";
										idGuia = "";

										creceita		= "DECLARACAO DE SERVICOS MEDICOS E DE SAUDE";
										ccpfCnpj		= "CNPJ DO DECLARANTE";
										ccadIcms		= "";
										ccompetencia	= "CALENDARIO";
										cdataVencimento	= "";

										ireceita		=  0;
										icpfCnpj		=  1;
										icadIcms		= -1;
                                        icompetencia	=  2;
										idataVencimento	= -1;

										sreceita		= 0;
										scpfCnpj		= 0;
										scadIcms		= 0;
										scompetencia	= 0;
										sdataVencimento	= 0;
										break;
									}

                                    if(line.contains("RECIBO DE ENTREGA DE ESCRITURACAO CONTABIL DIGITAL")) {
										tipoPlanilha = "ECD";
										idGuia = "";

										creceita		= "RECIBO DE ENTREGA DE ESCRITURACAO CONTABIL DIGITAL";
										ccpfCnpj		= "CNPJ";
										ccadIcms		= "";
										ccompetencia	= "PERIODO DA ESCRITURACAO";
										cdataVencimento	= "";

										ireceita		=  0;
										icpfCnpj		=  1;
										icadIcms		= -1;
                                        icompetencia	=  1;
										idataVencimento	= -1;

										sreceita		= 0;
										scpfCnpj		= 1;
										scadIcms		= 0;
										scompetencia	= 1;
										sdataVencimento	= 0;
										break;
									}

                                    if(line.contains("IMPOSTO DE RENDA DE PESSOA JURIDICA") && line.contains("ECF")) {
										tipoPlanilha = "ECF";
										idGuia = "";

										creceita		= "ORIGINAL";
										ccpfCnpj		= "CNPJ";
										ccadIcms		= "";
										ccompetencia	= "PERIODO DA APURACAO";
										cdataVencimento	= "";

										ireceita		=  0;
										icpfCnpj		=  1;
										icadIcms		= -1;
                                        icompetencia	=  0;
										idataVencimento	= -1;

										sreceita		=-1;
										scpfCnpj		= 1;
										scadIcms		= 0;
										scompetencia	= 1;
										sdataVencimento	= 0;
										break;
									}

                                    if(line.contains("EFD")) {
										tipoPlanilha = "EFD";
										idGuia = "";

										creceita		= "RECIBO DE ENTREGA DE ESCRITURACAO FISCAL DIGITAL";
										ccpfCnpj		= "CNPJ";
										ccadIcms		= "";
										ccompetencia	= "PERIODO DA APURACAO";
										cdataVencimento	= "";

										ireceita		=  0;
										icpfCnpj		=  1;
										icadIcms		= -1;
                                        icompetencia	=  1;
										idataVencimento	= -1;

										sreceita		= 0;
										scpfCnpj		= 0;
										scadIcms		= 0;
										scompetencia	= 0;
										sdataVencimento	= 0;
										break;
									}

                                    if(line.contains("ISSQN")) {
										tipoPlanilha = "ISSQN";
										idGuia = "";

										creceita		= "ISSQN";
										ccpfCnpj		= "NFSE";
										ccadIcms		= "";
										ccompetencia	= "ANO";
										cdataVencimento	= "";

										ireceita		=  4;
										icpfCnpj		=  1;
										icadIcms		= -1;
                                        icompetencia	=  2;
										idataVencimento	= -1;

										sreceita		= 0;
										scpfCnpj		= 1;
										scadIcms		= 0;
										scompetencia	= 1;
										sdataVencimento	= 0;
										break;
									}

                                    if(line.contains("VERSAO SPED")) {
										tipoPlanilha = "SPED/ICMS";
										idGuia = "";

										creceita		= "RECIBO DE ENTREGA DE ESCRITURACAO FISCAL DIGITAL";
										ccpfCnpj		= "CNPJ";
										ccadIcms		= "";
										ccompetencia	= "FINALIDADE DO ARQUIVO";
										cdataVencimento	= "";

										ireceita		=  0;
										icpfCnpj		=  1;
										icadIcms		= -1;
                                        icompetencia	=  1;
										idataVencimento	= -1;

										sreceita		= 0;
										scpfCnpj		= 0;
										scadIcms		= 0;
										scompetencia	= 1;
										sdataVencimento	= 0;
										break;
									}

                                    if(line.contains("BALANCETE")) {
										tipoPlanilha = "BALANCETE";
										idGuia = "";

										creceita		= "BALANCETE";
										ccpfCnpj		= "CNPJ";
										ccadIcms		= "";
										ccompetencia	= "PERIODO";
										cdataVencimento	= "";

										ireceita		=  0;
										icpfCnpj		=  0;
										icadIcms		= -1;
                                        icompetencia	=  1;
										idataVencimento	= -1;

										sreceita		= 0;
										scpfCnpj		= 0;
										scadIcms		= 0;
										scompetencia	= 0;
										sdataVencimento	= 0;
										break;
									}

                                    if(line.contains("BALANCO PATRIMONIAL")) {
										tipoPlanilha = "BALANCO PATRIMONIAL";
										idGuia = "";

										creceita		= "BALANCO PATRIMONIAL";
										ccpfCnpj		= "CNPJ";
										ccadIcms		= "";
										ccompetencia	= "SALDO EM";
										cdataVencimento	= "";

										ireceita		=  0;
										icpfCnpj		=  1;
										icadIcms		= -1;
                                        icompetencia	=  0;
										idataVencimento	= -1;

										sreceita		= 0;
										scpfCnpj		= 0;
										scadIcms		= 0;
										scompetencia	= 0;
										sdataVencimento	= 0;
										break;
									}

                                    if(line.contains("CESTAS BASICAS")) {
                                            tipoPlanilha = "CESTA BASICA";
                                            idGuia = "";

                                            creceita		= "";
                                            ccpfCnpj		= "MES DE";
                                            ccadIcms		= "";
                                            ccompetencia	= "MES DE";
                                            cdataVencimento	= "";

                                            ireceita		= -1;
                                            icpfCnpj		=  1;
                                            icadIcms		= -1;
                                            icompetencia	=  2;
                                            idataVencimento	= -1;

                                            sreceita		= 0;
                                            scpfCnpj		= 0;
                                            scadIcms		= 0;
                                            scompetencia	= 0;
                                            sdataVencimento	= 0;
                                            break;
                                    }

                                    if(line.contains("IMPOSTOS A PAGAR")||line.contains("DUPLICATAS A PAGAR PENDENTES")) {
                                            tipoPlanilha = "CPA";
                                            idGuia = "";

                                            if(line.contains("IMPOSTOS A PAGAR")){
                                                creceita		= "IMPOSTOS A PAGAR";
                                            }
                                            if(line.contains("DUPLICATAS A PAGAR PENDENTES")){
                                                creceita		= "DUPLICATAS A PAGAR PENDENTES";
                                            }
                                            ccpfCnpj		= "CNPJ";
                                            ccadIcms		= "";
                                            ccompetencia	= "CNPJ";
                                            cdataVencimento	= "";

                                            ireceita		=  0;
                                            icpfCnpj		=  0;
                                            icadIcms		= -1;
                                            icompetencia	=  1;
                                            idataVencimento	= -1;

                                            sreceita		= 0;
                                            scpfCnpj		= 0;
                                            scadIcms		= 0;
                                            scompetencia	= 0;
                                            sdataVencimento	= 0;
                                            break;
                                    }
                                    break;
								}

								case 2: {
									if(line.toUpperCase().contains(creceita)		&& !creceita.equals("")			&& lreceita			== -1) lreceita			= linha + sreceita;
									if(line.toUpperCase().contains(ccpfCnpj)		&& !ccpfCnpj.equals("")			&& lcpfCnpj			== -1) lcpfCnpj			= linha + scpfCnpj;
									if(line.toUpperCase().contains(ccadIcms)		&& !ccadIcms.equals("")			&& lcadIcms			== -1) lcadIcms			= linha + scadIcms;
									if(line.toUpperCase().contains(ccompetencia)	&& !ccompetencia.equals("")	    && lcompetencia		== -1) lcompetencia		= linha + scompetencia;
									if(line.toUpperCase().contains(cdataVencimento)	&& !cdataVencimento.equals("")	&& ldataVencimento	== -1) ldataVencimento	= linha + sdataVencimento;
                                    break;
                                }

								case 3: {
                                    if(tipoPlanilha.equals("MOVIMENTO")) continue;
									if(ldataVencimento == linha) {
										try {
											String dataString = getContentAt(line, separator, idataVencimento);
											dataString = cutString(dataString, 0,10);
											Date dt  = DateUtil.stringToDate(dataString, "dd/MM/yyyy");
											dataVencimento = DateUtil.dateToString(dt, "dd/MM/yyyy");
										} catch (Exception dt2) {}
									}
									if(lreceita		== linha)	receita		= getContentAt(line, separator, ireceita);
									if(lcpfCnpj 	== linha)	cpfCnpj		= getContentAt(line, separator, icpfCnpj);
									if(lcadIcms 	== linha)	cadIcms		= getContentAt(line, separator, icadIcms);
									if(lcompetencia == linha)	competencia	= getContentAt(line, separator, icompetencia);
                                    break;
								}
							}

						} catch(Exception e) {logger.logError("EndpointA: " + e + " ---- " + linhas.length);}
					}
				}
            }
			try{
				FileUtil.moveToDir(dirName+"/"+nomeArquivo, backupDirName);
			}catch(Exception ee){}
        }
    } catch (Exception ee) {
        putStatus(dirName, tipoLancamento + ".err", jStatus, logger);
        logger.logError("EndpointA: ", ee);
    }

	if(nomeArquivo.toUpperCase().contains(".PDF")) {
		JSONObject js = new JSONObject();

		js.put("IDDAGUIA", idGuia);
		js.put("arquivoId", "2176");
		js.put("RECEITA", receita);
		js.put("DATAVENCIMENTO", dataVencimento);
		js.put("competencia", competencia);
		js.put("CAD/ICMS", cadIcms);
		js.put("cnpj", cpfCnpj);

		js.put("NOMEARQUIVO", nomeArquivo);
		js.put("TIPOPLANILHA", tipoPlanilha);

		records.put(js);
	}

    return records;
}

class ttLote {
    public String lote;
    public ttLote(){}
    public ttLote(ttLote tt){
        lote=tt.lote;
    }
}

public int getIndiceRoteiro(String nomeCampo, JSONObject roteiroIndice) {

    int validaCampo = -1;
    try {
        if (!roteiroIndice.optString(nomeCampo).equals("")) {
            try {
                validaCampo = Integer.parseInt(roteiroIndice.optString(nomeCampo));
            }
            catch (Exception xx) { validaCampo = -1;}
        }
    }
    catch (Exception xx) {validaCampo = -1;}
    return  validaCampo;

}

private String[] increaseArraySize(String[] a) {
	String[] b = new String[a.length + 1];
	for (int i=0; i < a.length; ++i) {
	   b[i] = a[i];
	}
	a = b;
	return a;
}

private String getContentAt(String line, String separator, int index) {
    String[] sLine = line.split(separator);
    return sLine[index];
}


















//## CODIGO GERADO A PARTIR DAS REGRAS NO SALESFORCE ##
//## NAO ALTERAR DAQUI ATE O FINAL DO SCRIPT!!!!     ##

public JSONObject getRoteiro() {
    JSONObject js = new JSONObject();
	js.put("codigo", "ROT-2018-012370");
	js.put("idRoteiro", "a0A1C00000iWMAm");
	js.put("idEmpresa", "a0q1C000005EfjaQAC");
	js.put("fornecedor", "0");
	js.put("dataMovimento", "0");
	js.put("portador", "0");
	js.put("documentoNF", "0");
	js.put("valorDocumento", "0");
	js.put("valorJuros", "0");
	js.put("valorDesconto", "0");
	js.put("valorMulta", "0");
	js.put("valorPagamento", "0");
	js.put("complemento01", "0");
	js.put("complemento02", "0");
	js.put("complemento03", "0");
	js.put("complemento04", "0");
	js.put("complemento05", "0");
	js.put("complemento06", "0");
	js.put("centroCusto", "0");
	js.put("dataFake", "0");

	js.put("Abas_Especificas", "");
	js.put("classificaFornec", "");
	js.put("classificaPlano", "");
	js.put("contaFixaCredito", "");
	js.put("contaFixaDebito", "");
	js.put("contaFixaDesconto", "");
	js.put("contaFixaJuros", "");
	js.put("contaFixaMulta", "");
	js.put("contabilidade", "Depaula");
	js.put("Contabilizacao_Atraves_Fornecedor", "FALSE");
	js.put("Conta_Fixa_Cruzamento_Extrato", "");
	js.put("Cruza_Extrato_com_Extrato", "FALSE");
	js.put("cruzaExtrato", "FALSE");
	js.put("empresa", "Guia");
	js.put("empresaDir", "Guia_#001");
	js.put("erpContabilidade", "04. QUESTOR");
	js.put("Forcar_Partida_Dobrada", "FALSE");
	js.put("geraGerencial", "FALSE");
	js.put("Integracao_fiscal", "FALSE");
	js.put("Ler_Planilha_Pelo_Cabecalho", "FALSE");
	js.put("movimentoPortador", "PARTIDA DOBRADA");
	js.put("naoZerarValores", "FALSE");
	js.put("nomeRelatorioRef", "MOVIMENTACAO DO BANCO  SICOOB MES DEZEMBRO");
	js.put("Planilhas_Padroes", "Extratos OFX;Extrato_Sicoob");
	js.put("statusRoteiro", "EM DESENVOLVIMENTO");
	js.put("tipoArquivo", ".XLSX - EXCEL");
	js.put("tipoIntegracao", "CONTAS PAGAS");

	return js;
}


public String getTipoPlanilha(String line, String tipoPlanilha, String nomeArquivo, JSONObject jDadosObj) {
     boolean achouTipo = true;
    String [] campos1 = "DOCTO;DATA;FORNECEDOR".split(";");
    for (int x=0;x<campos1.length;x++) {
        if (!line.contains(campos1[x])) {
            achouTipo = false; break; }
    }
    if (nomeArquivo.toUpperCase().contains("SICOOB")) achouTipo = true;
    if (achouTipo) return "SECUNDARIA";
    achouTipo = true;
    String [] campos2 = "LUCAS".split(";");
    for (int x=0;x<campos2.length;x++) {
        if (!line.contains(campos2[x])) {
            achouTipo = false; break; }
    }
    if (achouTipo) return "TERCEIRO";
    achouTipo = true;
    return tipoPlanilha;
}

public String getConta(String nomeOrigem, String documento, String nomePortador,
                       String complemento01, String complemento02, String complemento03,
                       String nomeArquivo, String codCentroCusto) {
    String conta = "";
    String complemento04 = "";
    String complemento05 = "";
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return conta;
}
public String getConta09(String contaMovimento, String nomeOrigem, String documento,
                         String nomePortador, String complemento01, String complemento02,
                         String complemento03, String nomeArquivo, String codCentroCusto) {
    String conta = contaMovimento;
    String complemento04 = "";
    String complemento05 = "";
    String complemento06 = "";
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return conta;
}
public String getContaMovimento(String contaMovimento, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String codCentroCusto  = objHistorico.optString("codCentroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    String conta = contaMovimento;
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    
    return conta;
}
public String getRegraContaMovimento(String contaMovimento, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String codCentroCusto  = objHistorico.optString("codCentroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    String conta = contaMovimento;
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    
    return conta;
}
public String getContaPortador(String contaMovimento, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String codCentroCusto  = objHistorico.optString("codCentroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    String conta = contaMovimento;
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    if (StringUtil.removeSpecialCharsToUC(nomePortador).contains("1028130000148")) {
        conta = "10931";
    }
    if (StringUtil.removeSpecialCharsToUC(nomePortador).contains("8350686228607")) {
        conta = "10010";
    }
    if (StringUtil.removeSpecialCharsToUC(nomePortador).contains("8352486228613")) {
        conta = "10010";
    }
    if (StringUtil.removeSpecialCharsToUC(tipoPlanilha).contains("MOVIMENTO")) {
        conta = "10931";
    }
    return conta;
}
public String getContaJuros(String contaJuros, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaMovimento  = objHistorico.optString("contaMovimento");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaPortador   = objHistorico.optString("contaPortador");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String codCentroCusto  = objHistorico.optString("codCentroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    String conta = contaJuros;
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return conta;
}
public String getContaDesconto(String contaDesconto, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaMovimento  = objHistorico.optString("contaMovimento");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaPortador   = objHistorico.optString("contaPortador");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String codCentroCusto  = objHistorico.optString("codCentroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    String conta = contaDesconto;
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return conta;
}
public String getContaMulta(String contaMulta, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaMovimento  = objHistorico.optString("contaMovimento");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaPortador   = objHistorico.optString("contaPortador");
    String contaJuros      = objHistorico.optString("cntaJuros");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String codCentroCusto  = objHistorico.optString("codCentroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    String conta = contaMulta;
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return conta;
}
public double getValorPrincipal(String contaMovimento, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaPortador   = objHistorico.optString("contaPortador");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String codCentroCusto  = objHistorico.optString("codCentroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    double valorPrincipal = 0;
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return valorPrincipal;
}
public String getHistorico(String conta, String histParam, String tipoLancamento, String nomeOrigem, String documento,
                           String nomePortador, String complemento01, String complemento02, String complemento03,
                           String nomeArquivo, String codCentroCusto) {
    String historico = "";
    if(!histParam.equals("")) historico = histParam;

    if(histParam.equals("") && tipoLancamento.contains("PAGAR"))    historico = "PAGAMENTO " + documento + " " + nomeOrigem;
    if(histParam.equals("") && tipoLancamento.contains("RECEBER"))  historico = "RECEBIMENTO " + documento + " " + nomeOrigem;

    return historico.trim();
}
public String getHistoricoRegra(String conta, String histParam, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String historico = "";
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaMovimento  = objHistorico.optString("contaMovimento");
    String contaPortador   = objHistorico.optString("contaPortador");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String parcelaAtual    = objHistorico.optString("parcelaAtual");
    String parcelaAtualeFinal  = objHistorico.optString("parcelaAtualeFinal");
    String trimestreMesAnoAnterior = objHistorico.optString("trimestreMesAnoAnterior");
    String trimestreMesAnoAtual = objHistorico.optString("trimestreMesAnoAtual");
    String descricaoPlanoMovimento  = objHistorico.optString("descricaoPlanoMovimento");
    String descricaoPlanoPortador  = objHistorico.optString("descricaoPlanoPortador");
    String codCentroCusto  = objHistorico.optString("codCentroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    if(!histParam.equals("")) historico = histParam;

    if(histParam.equals("") && tipoLancamento.contains("PAGAR"))    historico = "PAGAMENTO " + documento + " " + nomeOrigem;
    if(histParam.equals("") && tipoLancamento.contains("RECEBER"))  historico = "RECEBIMENTO " + documento + " " + nomeOrigem;

    return historico.trim();
}
public String getRegraHistoricoRegra(String conta, String histParam, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String historico = "";
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaMovimento  = objHistorico.optString("contaMovimento");
    String contaPortador   = objHistorico.optString("contaPortador");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String codCentroCusto  = objHistorico.optString("codCentroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");

    return historico.trim();
}
public int getParcelaBase(String contaMovimento, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaPortador   = objHistorico.optString("contaPortador");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String codCentroCusto  = objHistorico.optString("codCentroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    int parcelaBase = 0;
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return parcelaBase;
}
public int getTotalParcelas(String contaMovimento, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaPortador   = objHistorico.optString("contaPortador");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String codCentroCusto  = objHistorico.optString("codCentroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    int parcelaBase = 0;
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return parcelaBase;
}
public String getMesAnoBase(String contaMovimento, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaPortador   = objHistorico.optString("contaPortador");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String codCentroCusto  = objHistorico.optString("codCentroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    String mesAnoBase = "";
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return mesAnoBase;
}
public String getHistoricoJuros(String conta, String histParam, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String historico = "";
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaMovimento  = objHistorico.optString("contaMovimento");
    String contaPortador   = objHistorico.optString("contaPortador");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String parcelaAtual    = objHistorico.optString("parcelaAtual");
    String parcelaAtualeFinal  = objHistorico.optString("parcelaAtualeFinal");
    String trimestreMesAnoAnterior = objHistorico.optString("trimestreMesAnoAnterior");
    String trimestreMesAnoAtual = objHistorico.optString("trimestreMesAnoAtual");
    String descricaoPlanoMovimento  = objHistorico.optString("descricaoPlanoMovimento");
    String descricaoPlanoPortador  = objHistorico.optString("descricaoPlanoPortador");
    String codCentroCusto  = objHistorico.optString("codCentroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    if(!histParam.equals("")) historico = histParam;

    if(histParam.equals("") && tipoLancamento.contains("PAGAR"))    historico = "PAGAMENTO " + documento + " " + nomeOrigem;
    if(histParam.equals("") && tipoLancamento.contains("RECEBER"))  historico = "RECEBIMENTO " + documento + " " + nomeOrigem;

    if (StringUtil.removeSpecialCharsToUC(contaJuros).equals("50145"))  historico = "PGTO JUROS DUPL No" + " " + documento + " " + "" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + "" + "";

    return historico.trim();
}
public String getHistoricoDesconto(String conta, String histParam, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String historico = "";
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String contaMovimento  = objHistorico.optString("contaMovimento");
    String contaPortador   = objHistorico.optString("contaPortador");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String parcelaAtual    = objHistorico.optString("parcelaAtual");
    String parcelaAtualeFinal  = objHistorico.optString("parcelaAtualeFinal");
    String trimestreMesAnoAnterior = objHistorico.optString("trimestreMesAnoAnterior");
    String trimestreMesAnoAtual = objHistorico.optString("trimestreMesAnoAtual");
    String descricaoPlanoMovimento  = objHistorico.optString("descricaoPlanoMovimento");
    String descricaoPlanoPortador  = objHistorico.optString("descricaoPlanoPortador");
    String codCentroCusto  = objHistorico.optString("codCentroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    if(!histParam.equals("")) historico = histParam;

    if(histParam.equals("") && tipoLancamento.contains("PAGAR"))    historico = "PAGAMENTO " + documento + " " + nomeOrigem;
    if(histParam.equals("") && tipoLancamento.contains("RECEBER"))  historico = "RECEBIMENTO " + documento + " " + nomeOrigem;

    if (StringUtil.removeSpecialCharsToUC(contaDesconto).equals("50154"))  historico = "RCBTO DESC DUPL No" + " " + documento + " " + "" + " " + nomeOrigem + " " + ""  + " " + ""  + " " + "" + "";

    return historico.trim();
}
public String getHistoricoMulta(String conta, String histParam, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String historico = "";
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String contaMovimento  = objHistorico.optString("contaMovimento");
    String contaPortador   = objHistorico.optString("contaPortador");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String codCentroCusto  = objHistorico.optString("codCentroCusto");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String parcelaAtual    = objHistorico.optString("parcelaAtual");
    String parcelaAtualeFinal  = objHistorico.optString("parcelaAtualeFinal");
    String trimestreMesAnoAnterior = objHistorico.optString("trimestreMesAnoAnterior");
    String trimestreMesAnoAtual = objHistorico.optString("trimestreMesAnoAtual");
    String descricaoPlanoMovimento  = objHistorico.optString("descricaoPlanoMovimento");
    String descricaoPlanoPortador  = objHistorico.optString("descricaoPlanoPortador");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    if(!histParam.equals("")) historico = histParam;

    if(histParam.equals("") && tipoLancamento.contains("PAGAR"))    historico = "PAGAMENTO " + documento + " " + nomeOrigem;
    if(histParam.equals("") && tipoLancamento.contains("RECEBER"))  historico = "RECEBIMENTO " + documento + " " + nomeOrigem;


    return historico.trim();
}
public String getCentroCusto(String CentroCusto, String nomeOrigem, String documento, String nomePortador,
                             String complemento01, String complemento02, String complemento03,
                             String nomeArquivo, String codCentroCusto) {
    String retornaCentroCusto = CentroCusto;
    return retornaCentroCusto;
}
public double getTaxaTarifa(String contaMovimento, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaDebito     = objHistorico.optString("contaDebito");
    String contaPortador   = objHistorico.optString("contaPortador");
    String contaCredito    = objHistorico.optString("contaCredito");
    String contaJuros      = objHistorico.optString("contaJuros");
    String contaDesconto   = objHistorico.optString("contaDesconto");
    String contaMulta      = objHistorico.optString("contaMulta");
    String nomePortador    = objHistorico.optString("nomePortador");
    String tipoPlanilha    = objHistorico.optString("tipoPlanilha");
    int    numeroAba       = objHistorico.optInt("numeroAba");
    String codCentroCusto  = objHistorico.optString("centroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    double valorTaxaTarifa = 0;
    if (complemento03.contains("C6#")) { complemento06 = complemento03.substring(complemento03.indexOf("C6#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C6#")).trim(); }
    if (complemento03.contains("C5#")) { complemento05 = complemento03.substring(complemento03.indexOf("C5#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C5#")).trim(); }
    if (complemento03.contains("C4#")) { complemento04 = complemento03.substring(complemento03.indexOf("C4#")+3).trim(); complemento03 = complemento03.substring(0,complemento03.indexOf("C4#")).trim(); }
    return valorTaxaTarifa;
}
public String getTabelaContabil(String TabelaContabil, String nomeOrigem, String documento, String nomePortador,
                                String complemento01, String complemento02, String complemento03, String complemento04, String complemento05,
                                String nomeArquivo) {
    String retornaTabelaContabil = TabelaContabil;
    return retornaTabelaContabil;
}
public String getParticipante(String participante, String nomeOrigem, String documento, String nomePortador,
                              String complemento01, String complemento02, String complemento03, String complemento04, String complemento05,
                              String nomeArquivo) {
    String retornaParticipantePai = participante;
    return retornaParticipantePai;
}
public String getFilial(String codFilial, String nomeOrigem, String documento, String nomePortador,
                        String complemento01, String complemento02, String complemento03,
                        String nomeArquivo, String codCentroCusto, String filial) {
    String retornaFilial = codFilial;
    return retornaFilial;
}
public String getRegrasParaAcumular(String loteParam, String chave, String tipoLancamento, String documento, String nomeOrigem, JSONObject objHistorico) {
    String lote = "";
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaMovimento  = objHistorico.optString("contaMovimento");
    String contaPortador   = objHistorico.optString("contaPortador");
    String nomePortador    = objHistorico.optString("nomePortador");
    String codCentroCusto  = objHistorico.optString("codCentroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");
    if(!chave.equals("")) lote = chave;



    return lote.trim();
}
public String  getReplaceTermos(String parametro, String parametro2, JSONObject objHistorico) {
    String lote = "";
    String nomeOrigem      = objHistorico.optString("nomeOrigem");
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String dataMovimento   = objHistorico.optString("dataMovimento");
    String mesAnoAnterior  = objHistorico.optString("mesAnoAnterior");
    String mesAno2Anterior = objHistorico.optString("mesAno2Anterior");
    String mesAnoAtual     = objHistorico.optString("mesAnoAtual");
    String contaMovimento  = objHistorico.optString("contaMovimento");
    String contaPortador   = objHistorico.optString("contaPortador");
    String nomePortador    = objHistorico.optString("nomePortador");
    String codCentroCusto  = objHistorico.optString("codCentroCusto");
    double valorDocumento  = objHistorico.optDouble("valorDocumento");
    double valorDesconto   = objHistorico.optDouble("valorDesconto");
    double valorJuros      = objHistorico.optDouble("valorJuros");

    return parametro2.trim();
}

public String  getLimpaCampos(String parametro, String parametro2, JSONObject objHistorico) {
    String lote = parametro2;
    String nomeOrigem      = objHistorico.optString("nomeOrigem");
    String documento       = objHistorico.optString("documento");
    String complemento01   = objHistorico.optString("complemento01");
    String complemento02   = objHistorico.optString("complemento02");
    String complemento03   = objHistorico.optString("complemento03");
    String complemento04   = objHistorico.optString("complemento04");
    String complemento05   = objHistorico.optString("complemento05");
    String complemento06   = objHistorico.optString("complemento06");
    String complemento07   = objHistorico.optString("complemento07");
    String complemento08   = objHistorico.optString("complemento08");
    String complemento09   = objHistorico.optString("complemento09");
    String complemento10   = objHistorico.optString("complemento10");
    String nomeArquivo     = objHistorico.optString("nomeArquivo").toUpperCase();
    String nomePortador    = objHistorico.optString("nomePortador");

    return lote.trim();
}
